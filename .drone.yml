# kind: pipeline
# name: build base images

# steps:
#     - name: setup
#       image: docker:dind
#     #   volumes:
#     #   - name: dockersock
#     #   - path: /var/run
#       environment:
#         AWS_ACCESS_KEY_ID:
#             from_secret: AWS_ACCESS_KEY_ID
#         AWS_SECRET_ACCESS_KEY:
#             from_secret: AWS_SECRET_ACCESS_KEY
#       commands:
#         - apk add --no-cache bash build-base ca-certificates curl gettext git libffi-dev linux-headers make musl-dev openldap-dev openssh-client python3 py-pip python3-dev rsync tzdata unzip
#         - pip3 install --upgrade pip
#         - pip3 install awscli boto3 'PyYAML<=3.13,>=3.10' aws-sam-cli docker-compose --upgrade
#         - aws s3 sync s3://forgerock7-binaries /tmp
#         - cd /tmp
#         - unzip -q Amster-7.0.0.zip -d amster
#         - unzip -q DS-7.0.0.zip -d ds
#         - unzip -q IG-7.0.0.zip -d ig 
#         - unzip -q IDM-7.0.1.zip -d idm 
#         - unzip -q AM-7.0.0.zip -d am
#         - ls
#         - cd amster/samples/docker
#         - ./setup.sh
#         - docker build --tag amster:7.0 .

# services:
#     - name: docker
#       image: docker:dind
#       privileged: true
#       volumes:
#       - name: dockersock
#         path: /var/run
    
# volumes:
#     - name: dockersock
#       temp: {}



kind: pipeline
name: build base images

steps:
    # - name: setup
    #   image: node
    #   environment:
    #     AWS_ACCESS_KEY_ID:
    #         from_secret: AWS_ACCESS_KEY_ID
    #     AWS_SECRET_ACCESS_KEY:
    #         from_secret: AWS_SECRET_ACCESS_KEY
    #   commands:
    #     - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    #     - unzip awscliv2.zip
    #     - ./aws/install
    #     - aws --version
    #     - aws s3 sync s3://forgerock7-binaries /tmp --no-progress
    #     - cd /tmp
    #     - unzip -q Amster-7.0.0.zip -d amster
    #     - unzip -q DS-7.0.0.zip -d ds
    #     - unzip -q IG-7.0.0.zip -d ig 
    #     - unzip -q IDM-7.0.1.zip -d idm 
    #     - unzip -q AM-7.0.0.zip -d am
    #     - ls
    #     - cd amster/samples/docker
    #     - ./setup.sh


    - name: publish  
      image: plugins/ecr
      environment:
        AWS_ACCESS_KEY_ID:
            from_secret: AWS_ACCESS_KEY_ID
        AWS_SECRET_ACCESS_KEY:
            from_secret: AWS_SECRET_ACCESS_KEY
      commands:
        - apk add --no-cache bash build-base ca-certificates curl gettext git libffi-dev linux-headers make musl-dev openldap-dev openssh-client python3 py-pip python3-dev rsync tzdata unzip
        - pip3 install --upgrade pip
        - pip3 install awscli boto3 'PyYAML<=3.13,>=3.10' aws-sam-cli docker-compose --upgrade
        - aws s3 sync s3://forgerock7-binaries .
        - unzip -q Amster-7.0.0.zip -d amster
        - unzip -q DS-7.0.0.zip -d ds
        - unzip -q IG-7.0.0.zip -d ig 
        - unzip -q IDM-7.0.1.zip -d idm 
        - unzip -q AM-7.0.0.zip -d am
        - ls
        - cd amster/samples/docker
        - ./setup.sh
        - cd -
      settings:
        access_key:
          from_secret: AWS_ACCESS_KEY_ID
        secret_key:
          from_secret: AWS_SECRET_ACCESS_KEY 
        create_repository: true
        repo: dronetest
        registry: 499815288658.dkr.ecr.eu-west-1.amazonaws.com
        dockerfile: amster/samples/docker/dockerfile
        region: eu-west-1
