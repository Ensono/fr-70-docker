kind: pipeline
name: build base images

steps:
    - name: build  
      image: node
      environment:
        AWS_ACCESS_KEY_ID:
            from_secret: AWS_ACCESS_KEY_ID
        AWS_SECRET_ACCESS_KEY:
            from_secret: AWS_SECRET_ACCESS_KEY
      commands:
        - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        - unzip awscliv2.zip
        - ./aws/install
        - aws s3 sync s3://forgerock7-binaries . --no-progress
        - unzip -q Amster-7.0.0.zip -d amster
        # - unzip -q DS-7.0.0.zip -d ds
        # - unzip -q IG-7.0.0.zip -d ig 
        # - unzip -q IDM-7.0.1.zip -d idm 
        # - unzip -q AM-7.0.0.zip -d am
        - cd amster/samples/docker
        - ./setup.sh

    # - name: publish  
    #   image: plugins/ecr
    #   # commands:
    #   #   - pwd
    #   settings:
    #     access_key:
    #       from_secret: AWS_ACCESS_KEY_ID
    #     secret_key:
    #       from_secret: AWS_SECRET_ACCESS_KEY 
    #     create_repository: true
    #     repo: dronetest
    #     registry: 499815288658.dkr.ecr.eu-west-1.amazonaws.com
    #     dockerfile: amster/samples/docker/Dockerfile
    #     region: eu-west-1

    - name: publish  
      image: docker:latest
      volumes:
        - name: dockersock
          path: /var/run
      commands:
        # - apk update
        - apk add --update --no-cache jq curl py-pip
        - pip install awscli
        - cd amster/samples/docker
        - $(aws ecr get-login --no-include-email --region us-east-1)
        - docker build -t amster .
        - docker tag amster:latest 499815288658.dkr.ecr.eu-west-1.amazonaws.com/amster:$DRONE_BUILD_NUMBER
        - docker push 499815288658.dkr.ecr.eu-west-1.amazonaws.com/amster:$DRONE_BUILD_NUMBER

services:
  - name: docker
    image: docker:dind
    privileged: true
    volumes:
    - name: dockersock
      path: /var/run

volumes:
  - name: dockersock
    temp: {}